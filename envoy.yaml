admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  # HTTPS 监听器 (端口 443)
  - name: listener_https_443
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
        protocol: TCP
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_https_443
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: qsgl_backend
              domains: ["*.qsgl.net", "qsgl.net"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: backend_cluster_443
                  timeout: 300s
                  host_rewrite_literal: "www.qsgl.net"
                response_headers_to_add:
                - header:
                    key: "alt-svc"
                    value: 'h3=":443"; ma=86400'
                  append: false
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          http_protocol_options:
            accept_http_10: true
          http2_protocol_options:
            allow_connect: true
            allow_metadata: true
          http3_protocol_options: {}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/envoy/certs/cert.pem"
              private_key:
                filename: "/etc/envoy/certs/key.pem"
            alpn_protocols:
            - h3
            - h2
            - http/1.1

  # HTTPS 监听器 (端口 5002)
  - name: listener_https_5002
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 5002
        protocol: TCP
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_https_5002
          codec_type: AUTO
          route_config:
            name: local_route_5002
            virtual_hosts:
            - name: qsgl_backend_5002
              domains: ["www.qsgl.net:5002", "api.qsgl.net:5002", "www.qsgl.net", "api.qsgl.net"]
              routes:
              - match:
                  prefix: "/sse/"
                route:
                  cluster: backend_cluster_5002
                  timeout: 0s
                  idle_timeout: 3600s
              - match:
                  prefix: "/"
                route:
                  cluster: backend_cluster_5002
                  timeout: 300s
                response_headers_to_add:
                - header:
                    key: "alt-svc"
                    value: 'h3=":5002"; ma=86400'
                  append: false
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          http_protocol_options:
            accept_http_10: true
          http2_protocol_options:
            allow_connect: true
            allow_metadata: true
          http3_protocol_options: {}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/envoy/certs/cert.pem"
              private_key:
                filename: "/etc/envoy/certs/key.pem"
            alpn_protocols:
            - h3
            - h2
            - http/1.1

  # HTTPS 监听器 (端口 99)
  - name: listener_https_99
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 99
        protocol: TCP
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_https_99
          codec_type: AUTO
          route_config:
            name: local_route_99
            virtual_hosts:
            - name: qsgl_backend_99
              domains: ["www.qsgl.net:99", "www.qsgl.net"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: backend_cluster_99
                  timeout: 300s
                response_headers_to_add:
                - header:
                    key: "alt-svc"
                    value: 'h3=":443"; ma=86400'
                  append: false
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          http_protocol_options:
            accept_http_10: true
          http2_protocol_options:
            allow_connect: true
            allow_metadata: true
          http3_protocol_options: {}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/envoy/certs/cert.pem"
              private_key:
                filename: "/etc/envoy/certs/key.pem"
            alpn_protocols:
            - h3
            - h2
            - http/1.1

  # UDP 监听器用于 QUIC (HTTP/3) - 端口 443
  - name: listener_quic_443
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
        protocol: UDP
    udp_listener_config:
      quic_options: {}
      downstream_socket_config:
        prefer_gro: true
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_quic_443
          codec_type: HTTP3
          route_config:
            name: local_route_quic
            virtual_hosts:
            - name: qsgl_backend_quic
              domains: ["*.qsgl.net", "qsgl.net"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: backend_cluster_443
                  timeout: 300s
                  host_rewrite_literal: "www.qsgl.net"
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          http3_protocol_options:
            allow_extended_connect: true
      transport_socket:
        name: envoy.transport_sockets.quic
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport
          downstream_tls_context:
            common_tls_context:
              tls_certificates:
              - certificate_chain:
                  filename: "/etc/envoy/certs/cert.pem"
                private_key:
                  filename: "/etc/envoy/certs/key.pem"
              alpn_protocols:
              - h3

  # UDP 监听器用于 QUIC (HTTP/3) - 端口 5002
  - name: listener_quic_5002
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 5002
        protocol: UDP
    udp_listener_config:
      quic_options: {}
      downstream_socket_config:
        prefer_gro: true
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_quic_5002
          codec_type: HTTP3
          route_config:
            name: local_route_quic_5002
            virtual_hosts:
            - name: qsgl_backend_quic_5002
              domains: ["*.qsgl.net", "qsgl.net"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: backend_cluster_5002
                  timeout: 300s
                  host_rewrite_literal: "www.qsgl.net"
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          http3_protocol_options:
            allow_extended_connect: true
      transport_socket:
        name: envoy.transport_sockets.quic
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport
          downstream_tls_context:
            common_tls_context:
              tls_certificates:
              - certificate_chain:
                  filename: "/etc/envoy/certs/cert.pem"
                private_key:
                  filename: "/etc/envoy/certs/key.pem"
              alpn_protocols:
              - h3

  clusters:
  # 后端集群 443
  - name: backend_cluster_443
    connect_timeout: 30s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: backend_cluster_443
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 61.163.200.245
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: www.qsgl.net
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: "/etc/ssl/certs/ca-certificates.crt"
    health_checks:
    - timeout: 5s
      interval: 30s
      unhealthy_threshold: 3
      healthy_threshold: 2
      tcp_health_check: {}

  # 后端集群 5002
  - name: backend_cluster_5002
    connect_timeout: 30s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: backend_cluster_5002
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 61.163.200.245
                port_value: 5002
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: www.qsgl.net
    health_checks:
    - timeout: 5s
      interval: 30s
      unhealthy_threshold: 3
      healthy_threshold: 2
      tcp_health_check: {}

  # 后端集群 99
  - name: backend_cluster_99
    connect_timeout: 30s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: backend_cluster_99
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 61.163.200.245
                port_value: 99
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: www.qsgl.net
    health_checks:
    - timeout: 5s
      interval: 30s
      unhealthy_threshold: 3
      healthy_threshold: 2
      tcp_health_check: {}
